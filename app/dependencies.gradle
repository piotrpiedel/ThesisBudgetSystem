ext {
    versions = [
            androidx      : "1.0.0",
            firebase      : '11.0.2',
            okHttp        : "3.12.0",
            retrofit      : '2.5.0',
            espresso      : '3.1.0',
            espressoRunner: '1.1.0',
            powerMock     : '1.6.6',
            hamcrest      : '1.3',
            restMock      : '0.3.2',
            dagger        : '2.16',
            butterKnife   : '9.0.0-rc2',
            leakcanary    : '1.6.2',
            robolectric   : '4.0.2',
            assertj       : '1.1.1',
            rxKotlin      : '2.3.0',
            rxAndroid     : '2.1.0',
            mockito       : '2.23.4',
            junit         : '4.12',
            sqlbrite      : '1.1.2',
            timber        : '4.7.1',
            stethOkhttp   : '1.5.0',
            multiDex      : '1.0.3',
            room_version  : '1.1.1',
            rxBindings    : '3.0.0-alpha2'
    ]

    mockito = [mockito: "org.mockito:mockito-core:$versions.mockito"]
    junit = [junit: "junit:junit:$versions.junit"]
    restMock = [restMock: "com.github.andrzejchm.RESTMock:android:$versions.restMock"]

    supportDeps = [
            cardView         : "androidx.cardview:cardview:$versions.androidx",
            appcompatV7      : "androidx.appcompat:appcompat:$versions.androidx",
            design           : "com.google.android.material:material:1.0.0-rc01",
            recyclerView     : "androidx.recyclerview:recyclerview:$versions.androidx",
            supportAnnotation: "androidx.annotation:annotation:$versions.androidx",
//            gridLayout       : "androidx.gridlayout:gridlayout:$versions.androidx",
            multiDex         : "androidx.multidex:multidex:2.0.0"
    ]

    rxJava = [
            rxKotlin : "io.reactivex.rxjava2:rxkotlin:$versions.rxKotlin",
            rxAndroid: "io.reactivex.rxjava2:rxandroid:$versions.rxAndroid"
    ]

    retrofit = [
            retrofit     : "com.squareup.retrofit2:retrofit:$versions.retrofit",
            rxAdapter    : "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit",
            gsonConverter: "com.squareup.retrofit2:converter-gson:$versions.retrofit",
            sqlbrite     : "com.squareup.sqlbrite:sqlbrite:$versions.sqlbrite"
    ]

    okHttp = [
            logger: "com.squareup.okhttp3:logging-interceptor:$versions.okHttp",
            okhttp: "com.squareup.okhttp3:okhttp:$versions.okHttp"
    ]

    googlePlay = [
            maps             : "com.google.android.gms:play-services-maps:$versions.firebase",
            crash            : "com.google.firebase:firebase-crash:$versions.firebase",
            firebaseCore     : "com.google.firebase:firebase-core:$versions.firebase",
            firebaseMessaging: "com.google.firebase:firebase-messaging:$versions.firebase"
    ]

    room = [
            room      : "androidx.room:room-runtime:2.0.0-rc01",
            roomRxJava: "androidx.room:room-rxjava2:2.0.0-rc01"
    ]

    rxBindings = [
            rxPlatform        : "com.jakewharton.rxbinding3:rxbinding:$versions.rxBindings",
            rxKotlinBindings  : "com.jakewharton.rxbinding2:rxbinding-kotlin:2.0.0",
            core              : "com.jakewharton.rxbinding3:rxbinding-core:$versions.rxBindings",
            appcompat         : "com.jakewharton.rxbinding3:rxbinding-appcompat:$versions.rxBindings",
            drawerlayout      : "com.jakewharton.rxbinding3:rxbinding-drawerlayout:$versions.rxBindings",
//            leanback          : "com.jakewharton.rxbinding3:rxbinding-leanback:$versions.rxBindings",
            recyclerview      : "com.jakewharton.rxbinding3:rxbinding-recyclerview:$versions.rxBindings",
//            slidingpanelayout : "com.jakewharton.rxbinding3:rxbinding-slidingpanelayout:$versions.rxBindings",
//            swiperefreshlayout: "com.jakewharton.rxbinding3:rxbinding-swiperefreshlayout:$versions.rxBindings",
//            viewpager         : "com.jakewharton.rxbinding3:rxbinding-viewpager:$versions.rxBindings"

    ]
    unitTest = [
            harcrestCore       : "org.hamcrest:hamcrest-core:$versions.hamcrest",
            harmcrestLib       : "org.hamcrest:hamcrest-library:$versions.hamcrest",
            hamcrestIntegration: "org.hamcrest:hamcrest-integration:$versions.hamcrest",
            robolectric        : "org.robolectric:robolectric:$versions.robolectric",
            supportAnnotation  : "androidx.annotation:annotation:$versions.androidx",
            restMock           : "com.github.andrzejchm.RESTMock:android:$versions.restMock",
            assertj            : "com.squareup.assertj:assertj-android:$versions.assertj",
            kotlinTest         : "org.jetbrains.kotlin:kotlin-test:$kotlin_version",
            kotlinJunit        : "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version",
//            roomTest           : "android.arch.persistence.room:testing:$versions.room_version"

    ] + junit + mockito + restMock

    androidTests = [
            espressoCore: "androidx.test.espresso:espresso-core:$versions.espresso",
            testRunner  : "androidx.test:runner:$versions.espressoRunner",
            testRules   : "androidx.test:rules:$versions.espressoRunner",
    ] + mockito + restMock

    supportLibs = supportDeps.values()
    networkLibs = retrofit.values() + okHttp.values()
    rxJavaLibs = rxJava.values()
    googlePlayLibs = googlePlay.values()
    unitTestLibs = unitTest.values()
    androidTestsLibs = androidTests.values() + supportLibs
    roomLibs = room.values()
    rxBindingsLibs = rxBindings.values()

    leakCannary = "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary"
    daggerCompiler = "com.google.dagger:dagger-compiler:$versions.dagger"
    roomCompiler = "androidx.room:room-compiler:2.0.0-rc01"
}