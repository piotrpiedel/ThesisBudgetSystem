apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    dexOptions {
        maxProcessCount 4
        preDexLibraries false
        javaMaxHeapSize "8g"
    }

    defaultConfig {

        applicationId "piedel.piotr.thesis"
        minSdkVersion 23
        targetSdkVersion 28
        testInstrumentationRunner "${applicationId}.runner.RxAndroidJUnitRunner"
        versionCode 1017
        // Major -> Millions, Minor -> Thousands, Bugfix -> Hundreds. E.g 1.3.72 == 1,003,072
        versionName '0.2.8'

        multiDexEnabled true

    }

    kapt {
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas".toString())
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            ext.enableCrashlytics = false
        }
    }

    sourceSets {
        def commonTestDir = 'src/commonTest/java'
        test {
            java.srcDir commonTestDir
        }
        androidTest {
            java.srcDir commonTestDir
        }
    }

    lintOptions {
        textOutput "stdout"
        textReport true
        checkAllWarnings true
        warningsAsErrors true
        showAll true
        explainIssues true
        abortOnError false
        lintConfig file("$projectDir/lint.xml")
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'LICENSE.txt'
        exclude 'META-INF/license/LICENSE.base64.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/DEPENDENCIES'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
        }
    }
}

configurations.all {
    resolutionStrategy {
        force 'com.squareup.okio:okio:2.2.0'
    }
}

apply from: 'dependencies.gradle'

dependencies {

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.8@aar') {
        transitive = true;
    }

    implementation supportLibs
//    implementation networkLibs
    implementation rxJavaLibs
//    implementation googlePlayLibs
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation roomLibs
    implementation rxBindingsLibs

    //simple permission request library
    implementation "com.karumi:dexter:$versions.dexter"

    implementation "com.github.bumptech.glide:glide:$versions.glide"
    kapt "com.github.bumptech.glide:compiler:$versions.glide"

    //MonthPicker
    implementation 'com.github.twinkle942910:monthyearpicker:0.0.1'

    //MPAndroidChart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0-alpha'

    //HTML parse Library
    implementation 'org.jsoup:jsoup:1.11.3'

    //JSON parse Library
    kapt("com.squareup.moshi:moshi-kotlin-codegen:1.8.0")
    implementation 'com.squareup.moshi:moshi-adapters:1.8.0'

    //Expandable RecyclerView
    implementation 'com.thoughtbot:expandablerecyclerview:1.3'

    //Enhanced RxJava2 execption stack trace
    implementation 'com.akaita.java:rxjava2-debug:1.4.0'

    //Android-FilePicker (Androidx based)
    implementation 'com.droidninja:filepicker:2.2.1'

    //Library for full screen image view
    implementation 'com.github.stfalcon:stfalcon-imageviewer:0.1.0'

    implementation "com.jakewharton:butterknife:$versions.butterKnife"
    implementation "com.jakewharton.timber:timber:$versions.timber"

    implementation("com.github.bumptech.glide:recyclerview-integration:4.8.0") {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }

    //Google api - google drive api to OCR
    implementation 'com.google.android.gms:play-services-auth:16.0.1'
    implementation 'com.google.http-client:google-http-client-gson:1.26.0'
    implementation('com.google.api-client:google-api-client-android:1.26.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation('com.google.apis:google-api-services-drive:v3-rev136-1.25.0') {
        exclude group: 'org.apache.httpcomponents'
    }

    implementation 'com.github.pavlospt:roundedletterview:1.2'

    implementation "com.google.dagger:dagger:$versions.dagger"
    compileOnly 'org.glassfish:javax.annotation:10.0-b28' //Required by Dagger2

    debugImplementation leakCannary
    releaseImplementation leakCannary
    testImplementation leakCannary

    kapt "com.jakewharton:butterknife-compiler:$versions.butterKnife"
    kapt daggerLibs
//    compileOnly "org.glassfish:javax.annotation:10.0-b28"
    kapt roomCompiler
    kaptTest daggerLibs
    kaptAndroidTest daggerLibs

}

// Log out test results to console
tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}
